// StopPow - a charged-particle stopping power library
// Copyright (C) 2014  Massachusetts Institute of Technology / Alex Zylstra

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License along
// with this program; if not, write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

package stoppowgui;

/**
 * A generic dialog for model configuration
 * @author Alex Zylstra
 * @date 2013/06/04
 */
public class ModelConfigDialog extends javax.swing.JDialog {
    /** The panel containing specific model configuration UI elements */
    ModelConfigPanel modelPanel;
    
    /**
     * Create a new model configuration dialog
     * @param parent The parent frame
     * @param modal Whether the dialog should be modal
     * @param modelPanel The panel to add to this dialog
     */
    public ModelConfigDialog(java.awt.Frame parent, boolean modal, ModelConfigPanel modelPanel) {
        super(parent, modal);
        
        this.modelPanel = modelPanel;
        ((ModelConfigPanel)modelPanel).setDialog(this);
        
        if(modelPanel.isEditMode())
            this.setTitle("Edit " + modelPanel.getPreviousKey() );
        else
            this.setTitle("Add "+modelPanel.get_type());
        
        // set the panel:
        add(modelPanel);
        setLocationRelativeTo(parent);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension( (int)modelPanel.getSize().getWidth() , (int)(modelPanel.getSize().getHeight() + 20)));
        setResizable(false);
        setSize(new java.awt.Dimension( (int)modelPanel.getSize().getWidth() , (int)(modelPanel.getSize().getHeight() + 20)));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
